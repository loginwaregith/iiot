{"version":3,"sources":["reusableComponents/loader.js","pages/welcome.js","reusableComponents/headerTitle.js","reusableComponents/roundTextfield.js","reusableComponents/secButton.js","reusableComponents/password.js","nonReusableComponents/forgotPass.js","reusableComponents/errorToast.js","reusableComponents/login.js","reusableComponents/shutdownDialog.js","pages/login.js","nonReusableComponents/operationsDropdown.js","nonReusableComponents/setOperationsHeader.js","pages/setOperations.js","reusableComponents/button.js","reusableComponents/select.js","reusableComponents/headerBody.js","reusableComponents/successToast.js","pages/screenIdle.js","pages/alarm.js","nonReusableComponents/inputChip.js","pages/dashboard.js","pages/admin/home.js","reusableComponents/headerContainer.js","reusableComponents/inputTextField.js","pages/admin/networkConf.js","pages/admin/serverConf.js","reusableComponents/filledSelect.js","reusableComponents/switch.js","pages/admin/signalConf.js","reusableComponents/radioInput.js","pages/admin/otherSetting.js","nonReusableComponents/drawer.js","App.js","serviceWorker.js","index.js"],"names":["override","css","AwesomeComponent","props","className","size","color","loading","Home","history","valueSetter","useEffect","axios","get","then","response","console","log","data","result","push","catch","error","style","backgroundColor","Typography","paragraph","textAlign","fontWeight","fontSize","fontFamily","marginTop","withStyles","theme","root","flexGrow","paper","padding","spacing","unit","palette","text","secondary","margin","borderRadius","classes","Grid","container","item","xs","sm","Paper","marginLeft","BasicTextFields","TextField","variant","label","width","bgColor","height","disabled","state","onChange","onBlur","value","name","touched","useStyles","makeStyles","button","IconLabelButtons","Button","type","startIcon","icon","isDisabled","onClick","handleClick","Password","React","useState","showPassword","values","setValues","FormControl","InputLabel","FilledInput","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","preventDefault","edge","AlertDialog","open","setOpen","handleClose","password","handleClickShowPassword","handleMouseDownPassword","Dialog","onClose","DialogContent","DialogContentText","Divider","autoFocus","DialogActions","ErrorToast","msg","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Login","schema","yup","shape","username","required","formik","useFormik","initialValues","validationSchema","onSubmit","localStorage","getItem","url","method","res","resultedData","setItem","JSON","stringify","err","handleSubmit","paddingRight","paddingTop","paddingBottom","round","handleChange","handleBlur","errors","buttonText","bodyText","logout","elevation","border","display","alignItems","justifyContent","OperationsDropdown","selectedValue","setSelectedValue","Select","target","enableButton","getOperations","map","ele","index","MenuItem","key","FormHelperText","helperText","HeaderBody","allOperations","setallOperations","setisDisabled","machineId","shift","fullName","components","parse","modelNames","Container","modelCode","params","operationObj","OperationList","i","length","Box","mt","marginRight","navigate","SetOperations","to","paddingLeft","textColor","formControl","minWidth","selectEmpty","SimpleSelect","id","componentName","modelNameCode","operationNameCode","SuccessToast","success","IdleScreen","modelName","operationName","idleReason","onSubmitProps","headers","status","SuccesToast","message","setSubmitting","resetForm","effect","effectChange","effectDuration","isValid","dirty","Alarm","jobId","alarmReason","Inputchip","OutlinedInput","startAdornment","labelWidth","notched","helpertext","Dashboard","idleTimerRef","useRef","idleTimeout","timeout","Number","split","productionCount","setproductionCount","liveSignal","setliveSignal","interval","setInterval","post","clearInterval","ref","onIdle","headerContainer","background","maxWidth","InputComponent","htmlFor","Input","autofocus","NetworkConf","ip","dns","gateway","networkDetails","setnetworkDetails","isloading","setisloading","ipValidRegx","String","raw","matches","enableReinitialize","ml","flexWrap","input","ServerConf","serverIp","setserverIp","api","endpoint","fullWidth","BootstrapInput","transition","transitions","create","join","boxShadow","InputBase","CustomizedSelects","options","SwitchesGroup","component","FormGroup","FormControlLabel","control","Switch","SignalConf","signal1","signal2","signal3","signal4","signal5","signal6","signal7","signal8","signal9","signal10","signal11","signal12","signal13","signal14","pin1","pin2","pin3","pin4","pin5","pin6","pin7","pin8","pin9","pin10","pin11","pin12","pin13","pin14","enable1","enable2","enable3","enable4","enable5","enable6","enable7","enable8","enable9","enable10","enable11","enable12","enable13","enable14","pins","m","RadioButtonsGroup","FormLabel","RadioGroup","option1","Radio","option2","OtherSetting","otherSettingsSavedData","setotherSettingsSavedData","machineIds","setmachineIds","batchSize","holdingRelay","machineBypass","cleaningInterval","machineType","machineList","createBrowserHistory","icons","routes","flex","appBar","drawer","flexShrink","drawerPaper","toolbarMargin","mixins","toolbar","aboveDrawer","zIndex","PermanentDrawerLeft","CssBaseline","AppBar","Toolbar","noWrap","Drawer","anchor","List","ListItem","Link","ListItemIcon","ListItemText","primary","content","exact","path","OtherSettings","App","getinitialValues","render","newestOnTop","rtl","pauseOnFocusLoss","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5c7f682.chunk.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport DotLoader from \"react-spinners/DotLoader\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n \nexport default function AwesomeComponent (props){\n  \n\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader\n          css={override}\n          size={props.size}\n          color={props.color}\n          loading={true}\n          \n        />\n      </div>\n    );\n  \n}","import React, { useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../index.css\";\nimport Loader from \"../reusableComponents/loader.js\";\nimport axios from \"axios\";\n\nfunction Home({ history, valueSetter }) {\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:5002\")\n      .then((response) => {\n        console.log(response);\n        console.log(response.data.result);\n        valueSetter(response.data.result.data);\n        history.push('/login');\n\n\n      })\n      .catch((error) => {\n        console.log(error);\n        history.push('/login');\n\n      });\n\n  }, []);\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#ffc400\",\n      }}\n    >\n      <Typography\n        paragraph\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <span\n          style={{\n            color: \"black\",\n            fontWeight: \"bolder\",\n            fontSize: 70,\n            fontFamily: \"Dancing Script\",\n          }}\n        >\n          IIOT CNC Monitoring Device...\n          </span>\n        <br></br>\n        <p\n          style={{\n            marginTop: 150,\n          }}\n        >\n\n        </p>\n\n        <div>\n          <Loader color={\"#f50057\"}> </Loader>\n          <center>\n            <h3\n              style={{\n                fontFamily: \"Acme\",\n                fontWeight: \"bolder\",\n              }}\n            >\n              please wait while we are loading things for you....{\" \"}\n            </h3>{\" \"}\n          </center>{\" \"}\n        </div>\n        <div\n          style={{\n            marginTop: 300,\n            fontSize: 30,\n            fontWeight: \"bold\",\n            fontFamily: \"Dancing Script\",\n            color: \"black\",\n          }}\n        >\n          <center\n            style={{\n              color: \"black\",\n            }}\n          >\n            <span\n              style={{\n                fontSize: 18,\n                fontWeight: \"bold\",\n                fontFamily: \"Knewave\",\n                color: \"black\",\n              }}\n            >\n              powered by{\" \"}\n            </span>{\" \"}\n            <br></br>\n              LoginWare SoftTech Solutions\n          </center>{\" \"}\n        </div>{\" \"}\n      </Typography>{\" \"}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    margin:0,\n    borderRadius:0\n  },\n});\n\nfunction HeaderTitle(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n        <Grid container spacing={0} >\n          <Grid item xs={12} sm={12}>\n            <Paper  style={{fontFamily:'DancingScript',fontWeight:'bold',padding:10,backgroundColor:'#512da8',color:'white'}}>Srinivas Induction Hardening\n            <span style={{marginLeft:300,fontWeight:'bolder',fontFamily:'Acme'}}>IIOT CNC MONITORING</span></Paper>\n          </Grid>\n        </Grid>\n    </div>\n  );\n}\n\nHeaderTitle.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HeaderTitle);","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\n\nexport default function BasicTextFields(props) {\n\n\n  return (\n    <form >\n      <TextField variant=\"filled\"\n        label={props.text}\n        size={props.size}\n        style={{ width: props.width, backgroundColor: props.bgColor, color: props.color, marginLeft: props.marginLeft, fontWeight: 'bold',height:props.height }}\n        disabled={props.state}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n        value={props.value}\n        name={props.name}\n        error={props.touched && props.error ? true : false}\n\n\n      />\n    </form>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function IconLabelButtons(props) {\n  const classes = useStyles();\n\n  \n\n  return (\n    <div>\n      <Button\n        type={props.type}\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n        startIcon={props.icon}\n        style={{fontWeight:'bold'}}\n        disabled={props.isDisabled}\n        onClick={props.handleClick}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nexport default function Password(props) {\r\n    const [values, setValues] = React.useState({\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormControl variant=\"filled\">\r\n                <InputLabel error={props.touched && props.error ? true : false}>\r\n                    {props.label}\r\n                </InputLabel>\r\n                <FilledInput\r\n                    style={{ backgroundColor: props.bgColor }}\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                    onBlur={props.onBlur}\r\n                    error={props.touched && props.error ? true : false}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                            >\r\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Divider from '@material-ui/core/Divider';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [values, setValues] = React.useState({\n    password: '',\n    showPassword: false,\n  });\n\n\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div>\n      <Button   onClick={handleClickOpen} style={{color:\"white\",fontSize:12}}>\n       Reset Password\n       \n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogContent>\n        <DialogContentText>\n            <h3 style={{fontWeight:'bold',color:'black',textAlign:'center',fontSize:25,fontFamily:'Acme'}}>Forgot/Reset Password</h3>\n            <Divider></Divider>\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Original Password\"\n            type=\"password\"\n            \n            endAdornment={\n              <InputAdornment position=\"end\">\n\n                <IconButton\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          /><br></br>\n          <TextField\n            margin=\"dense\"\n            label=\"New Password\"\n            type=\"password\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n\n                <IconButton\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          /><br></br>\n          <TextField\n            margin=\"dense\"\n            label=\"Confirm New Password\"\n            \n            type=\"password\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n\n                <IconButton\n\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          /> <br></br>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}  style={{backgroundColor:\"#d50000\",color:\"white\",fontWeight:'bold',padding:10}}>\n            Close\n          </Button>\n          <Button onClick={handleClose}  style={{backgroundColor:\"#64dd17\",color:\"white\",fontWeight:'bold',padding:10}} autoFocus>\n           Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function ErrorToast(msg){\n\n\n\n  return(toast.error(msg,{\n    position: \"bottom-right\",\n    autoClose: 7000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n\n  }));\n\n}","import Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport InputField from \"../reusableComponents/roundTextfield.js\";\nimport Button from \"../reusableComponents/secButton\";\nimport Avatar from \"react-avatar\";\nimport Password from \"../reusableComponents/password\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Forgotpass from \"../nonReusableComponents/forgotPass\";\nimport axios from \"axios\";\nimport ErrorToast from './errorToast';\n\n\n\nfunction Login(props) {\n\n  const schema = yup.object().shape({\n    username: yup.string().required(),\n    password: yup.string().required(),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (data) => {\n      data[\"machineId\"] = localStorage.getItem('machineId');\n      axios({\n        url: \"http://127.0.0.1:5002/login\",\n        method: \"post\",\n        data: data,\n      })\n        .then((res) => {\n          console.log(res);\n          var result = res['data']['result'];\n          var resultedData = result['data'];\n          if (result['status'] === 0) {\n            console.log(result)\n            ErrorToast(result['message']);\n          }\n          else {\n            if (result['admin'] === true) {\n              localStorage.setItem('IS_LOGGED_IN','true');\n              localStorage.setItem('user', 'admin');\n              props.history.push('/admin')\n            }\n            else {\n              console.log(resultedData['Components']);\n              localStorage.setItem('IS_LOGGED_IN', 'true');\n              localStorage.setItem('user', 'nonAdmin');\n              localStorage.setItem('fullName', resultedData['FullName']);\n              localStorage.setItem('shift', resultedData['Shift']);\n              localStorage.setItem('components', JSON.stringify(resultedData['Components']));\n              localStorage.setItem('models', JSON.stringify(resultedData['Models']));\n              props.history.push('setoperations')\n            }\n\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          ErrorToast('Something Went Wrong, Please try Again...');\n        });\n    },\n  });\n\n  return (\n    < div >\n      <center>\n        <form onSubmit={formik.handleSubmit}>\n          <Paper\n            style={{\n              backgroundColor: \"#ffff00\",\n              width: 320,\n              paddingRight: 90,\n              paddingTop: 15,\n              paddingBottom: 15,\n            }}\n          >\n            <Paper\n              style={{ backgroundColor: \"#ff1744\", width: 320, padding: 25 }}\n            >\n              <Paper\n                style={{ backgroundColor: \"#6200ea\", width: 300, padding: 50 }}\n              >\n                <Avatar\n                  name=\"Srinivas Induction Hardening\"\n                  size=\"70\"\n                  round={true}\n                />\n                <br></br>\n                <br></br>\n\n                <InputField\n                  name=\"username\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.username}\n                  text=\"Username\"\n                  error={formik.errors.username}\n                  touched={formik.touched.username}\n                  width={260}\n                  bgColor=\"#fafafa\"\n                />\n                <br></br>\n                <Password\n                  name=\"password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                  label=\"Password\"\n                  error={formik.errors.password}\n                  touched={formik.touched.password}\n                  bgColor=\"#f5f5f5\"\n                />\n                <Button text=\"Submit\" type=\"submit\"></Button>\n                <Forgotpass></Forgotpass>\n              </Paper>\n            </Paper>\n          </Paper>\n        </form>\n      </center>\n    </div >\n  );\n}\n\nexport default Login;\n\n","import React  from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Divider from '@material-ui/core/Divider';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport axios from 'axios';\n\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\n  };\n\n  const shutdown = () => {\n\n    localStorage.setItem('IS_LOGGED_IN','false')\n    localStorage.setItem('user', '');\n    localStorage.setItem('fullName', '');\n    localStorage.setItem('shift','');\n    localStorage.setItem('components','');\n    localStorage.setItem('models','');\n    localStorage.setItem('operationName','');\n    localStorage.setItem('componentName','');\n    localStorage.setItem('modelName','');\n    localStorage.setItem('jobId','');\n\n\n    if(props.name==='shutdown'){\n      console.log('shuttingdown');\n      axios.get(\"http://127.0.0.1:5002/shutdown\").then((response) => {}).catch((error) =>{})\n      setOpen(false);\n    }\n   else{   \n    props.logout();\n    setOpen(false);\n   } \n    \n  }\n\n  \n\n  return (\n    <div>\n      <Button startIcon={props.icon} onClick={handleClickOpen} style={{ backgroundColor: props.color, color: \"white\", fontWeight: \"bold\", padding: 8 }}>\n        {props.buttonText}\n\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogContent>\n          <DialogContentText>\n            <h3 style={{ fontWeight: 'bold', color: 'black', textAlign: 'center', fontSize: 25}}>{props.bodyText}</h3>\n            <Divider></Divider>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} style={{ backgroundColor: \"#d50000\", color: \"white\", fontWeight: 'bold', padding: 10 }}>\n            Cancel\n          </Button>\n          <Button onClick={shutdown} style={{ backgroundColor: \"#64dd17\", color: \"white\", fontWeight: 'bold', padding: 10 }} autoFocus>\n            Yes !!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport HeaderTitle from '../reusableComponents/headerTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport LoginForm from '../reusableComponents/login.js';\nimport Dialog from '../reusableComponents/shutdownDialog';\n\n\n\nexport default function Login(props) {\n\n  return (\n    < div >\n\n      <HeaderTitle text={\"IIOT CNC Monitoring \"}></HeaderTitle>\n\n      <Grid container>\n        <Grid item xs={12} sm={12}>\n          <Paper\n            elevation={20}\n            style={{\n              // fontFamily: \"Acme\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#ffc107\",\n              color: 'black',\n              fontSize: 26,\n              border: \"2px solid #ffd600\",\n              padding: 4\n            }}\n          >\n            <Grid container>\n              <Grid\n                item\n                sm={10}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                MACHINE ID : {localStorage.getItem('machineId')}\n              </Grid>\n\n\n\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                }}\n              >\n                <Dialog color={\"#d50000\"} name=\"shutdown\" bodyText={\"Do you really want to shutdown the device ? \"} buttonText={\"Shutdown\"} icon={<PowerSettingsNewIcon></PowerSettingsNewIcon>}></Dialog>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <p style={{ marginTop: 30 }}></p>\n\n      <LoginForm history={props.history}></LoginForm>\n\n\n    </div >\n  )\n}\n\n\n\n\n\n\n","import React, { useState } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n\r\nexport default function OperationsDropdown(props) {\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n\r\n  const handleChange = (event) => {\r\n    if (props.name === \"component\") {\r\n      setSelectedValue(event.target.value)\r\n      localStorage.setItem(\"componentName\", event.target.value);\r\n\r\n      if(localStorage.getItem(\"componentName\")!==\"\" && localStorage.getItem(\"modelName\")!==\"\" && localStorage.getItem(\"operationName\")!==\"\")\r\n        {\r\n         props.enableButton();\r\n        }\r\n\r\n    } else if (props.name === \"modelName\") {\r\n      setSelectedValue(event.target.value);\r\n      props.getOperations(event.target.value);\r\n      localStorage.setItem(\"modelName\", event.target.value);\r\n    } else {\r\n      setSelectedValue(event.target.value);\r\n      localStorage.setItem(\"operationName\", event.target.value);\r\n      if(localStorage.getItem(\"componentName\")!==\"\" && localStorage.getItem(\"modelName\")!==\"\" && localStorage.getItem(\"operationName\")!==\"\")\r\n        {\r\n        props.enableButton();\r\n        }\r\n        else{\r\n            console.log(\"fill all details first\");\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl style={{ marginTop: 20 }}>\r\n        <Select\r\n          style={{ width: 170, color: \"black\" }}\r\n          required\r\n          onChange={handleChange}\r\n          value={selectedValue}\r\n          name={props.name}\r\n        >\r\n          {(props.name === \"modelName\" || props.name === \"operation\" ) ? (\r\n            props.data !== undefined ? (\r\n              props.data.map((ele, index) => (\r\n               \r\n                <MenuItem value={ele[\"value\"]} key={index}>\r\n                  {ele[\"code\"]}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <MenuItem value={\"none\"}>\r\n                <em>None</em>\r\n              </MenuItem>\r\n            )\r\n          ) : props.data !== undefined ? (\r\n            props.data.map((ele, index) => (\r\n              <MenuItem value={ele} key={index}>\r\n                {ele}\r\n              </MenuItem>\r\n            ))\r\n          ) : (\r\n            <MenuItem value={\"none\"}>\r\n              <em>None</em>\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n        <FormHelperText style={{ color: \"#4615b2\" }}>\r\n          {props.helperText}\r\n        </FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DropDown from \"../nonReusableComponents/operationsDropdown\";\nimport axios from 'axios';\nimport SecButton from '../reusableComponents/secButton';\nimport Box from \"@material-ui/core/Box\";\nimport PublishIcon from '@material-ui/icons/Publish';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    backgroundColor: \"#00b0ff\",\n    fontSize: 14,\n    color: \"black\",\n    fontFamily: \"Acme\",\n    padding: 14,\n    textAlign: \"center\",\n    borderRadius: 6,\n    border: \"2px solid #18ffff\",\n  },\n\n  data: {\n    backgroundColor: \"#64dd17\",\n    fontSize: 12,\n    color: \"black\",\n    fontWeight: \"bold\",\n    padding: 14,\n    textAlign: \"center\",\n    borderRadius: 6,\n    border: \"2px solid #ffff00\",\n    height: 60,\n\n  },\n}));\n\nfunction HeaderBody(props) {\n\n  const [allOperations, setallOperations] = useState([]);\n  const [isDisabled, setisDisabled] = useState(true);\n\n\n  var machineId = localStorage.getItem('machineId');\n\n  var shift = localStorage.getItem('shift');\n\n  var fullName = localStorage.getItem('fullName');\n\n  var components = JSON.parse(localStorage.getItem('components'));\n\n  var modelNames = JSON.parse(localStorage.getItem('models'));\n\n\n  const getAllOperations = (modelCode) => {\n    let machineId = localStorage.getItem(\"machineId\");\n    console.log(machineId);\n    console.log(modelCode);\n    axios.get('http://182.75.179.210/be/api/iiot/OperationList',\n      {params:{'machineCode':machineId,'modelCode':modelCode}}\n    )\n      .then((res) => {\n        //remove values for real testig\n        let result=res.data;\n        console.log(result)\n        let operationObj = {};\n        var OperationList=[];\n        for(let i=0;i<result.length;i++){\n            operationObj['code'] = result[i]['Value']\n            operationObj['value'] = result[i]['Code']\n            OperationList.push(operationObj);\n            operationObj={}\n        }\n        \n        localStorage.setItem('operations',JSON.stringify(OperationList))\n        setallOperations(OperationList)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const enableButton = () =>{\n    setisDisabled(false);\n  }\n\n  const handleClick = () =>{\n    props.history.push('/dashbaord');\n  }\n\n\n  const classes = useStyles();\n\n  return (\n\n    <div>\n      <Grid container spacing={1}>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>OPERATOR NAME</Container>\n            </Grid>\n            <Grid item sm={12} spacing={1}>\n              <Container className={classes.data}>\n                {fullName}\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>MACHINE ID</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{machineId}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>SHIFT</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{shift}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>\n                SELECT COMPONENT\n              </Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container\n                className={classes.data}\n                style={{ padding: 0, margin: 0 }}\n              >\n                <DropDown\n                  width={200}\n                  data={components}\n                  name=\"component\"\n                  enableButton={enableButton}\n\n                ></DropDown>\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>MODEL NAME</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container\n                className={classes.data}\n                style={{ padding: 0, margin: 0 }}\n              >\n                <DropDown\n                  name=\"modelName\"\n                  getOperations={getAllOperations}\n                  data={modelNames}\n                ></DropDown>\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>OPERATION</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container\n                className={classes.data}\n                style={{ padding: 0, margin: 0 }}\n              >\n                <DropDown\n                  name=\"operation\"\n                  data={allOperations}\n                  enableButton={enableButton}\n                ></DropDown>\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Box mt={15}></Box>\n\n      <Grid container>\n        <Grid\n          item\n          sm={12}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginRight: 30,\n            marginTop: 15,\n          }}\n        >\n          <SecButton\n            icon={<PublishIcon></PublishIcon>}\n            text={\"Submit\"}\n            isDisabled={isDisabled}\n            navigate={true}\n            handleClick={handleClick}\n\n          ></SecButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default HeaderBody;\n","import React from \"react\";\nimport HeaderTitle from \"../reusableComponents/headerTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport OperationHeaderBody from '../nonReusableComponents/setOperationsHeader';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Dialog from '../reusableComponents/shutdownDialog';\nimport { Redirect } from 'react-router-dom';\n\n\nfunction SetOperations(props) {\n\n  const logout = ()=>{\n    props.history.push('/login')\n }\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n  else {\n  return (\n    < div >\n      <HeaderTitle text={\"IIOT CNC Monitoring \"}></HeaderTitle>\n      <Grid container>\n        <Grid item xs={12} sm={12} spacing={1}>\n          <Paper\n            elevation={20}\n            style={{\n              fontFamily: \"Acme\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#ffc107\",\n              color: \"#d50000\",\n              fontSize: 26,\n              border: \"2px solid #ffd600\",\n              padding: 4\n            }}\n          >\n            <Grid container>\n\n\n              <Grid\n                item\n                sm={8}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Select Operations\n                </Grid>\n\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  paddingLeft: 30\n                }}\n              >\n\n                <Dialog color={\"#00e676\"} logout={logout} name=\"logout\" bodyText={\"Do you really want to logout? \"} buttonText={\"Logout\"} icon={<ExitToAppIcon></ExitToAppIcon>}></Dialog>\n\n              </Grid>\n\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n\n                }}\n              >\n                <Dialog color={\"#d50000\"} name=\"shutdown\" bodyText={\"Do you really want to shutdown the device ? \"} buttonText={\"Shutdown\"} icon={<PowerSettingsNewIcon></PowerSettingsNewIcon>}></Dialog>\n\n              </Grid>\n\n\n\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <p></p>\n\n      <OperationHeaderBody history={props.history}></OperationHeaderBody>\n\n    </div >\n  );\n}\n\n\n\n}\n\nexport default SetOperations;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function IconLabelButtons(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        style={{backgroundColor:props.color,color:props.textColor,fontWeight:\"bolder\",fontSize:12}}\n        className={classes.button}\n        startIcon={props.icon}\n        onClick={props.handleClick}\n        \n\n      >\n        {props.text}\n      </Button>\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n    marginTop:6\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  \n}));\n\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n  // const [selectedValue, setselectedValue] = useState(\"\")\n  // const [showTextBox, setshowTextBox] = useState(false)\n\n  // const handleChange = (event) => {\n  //   setselectedValue(event.target.value);\n  //   if(event.target.value===\"others\")\n  //   {\n  //     setshowTextBox(true);\n  //   }\n  //   else{\n  //     setshowTextBox(false);\n  //   }\n  // };\n\n  return (\n    <div>\n\n      <FormControl className={classes.formControl}>\n      <InputLabel   style={{color:\"#ff1744\",fontWeight:\"bold\"}}>{props.label}</InputLabel>\n        <Select\n          style={{width:props.width,color:'black'}}\n          id=\"demo-simple-select-helper\"\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          value={props.value}\n          name={props.name}\n          \n        >\n\n       { \n       props.data!==undefined ? props.data.map((ele,index)=>(\n        <MenuItem value={ele} key={index}>{ele}</MenuItem>\n      ))\n       :\n       <MenuItem value={'none'}><em>None</em></MenuItem>\n       }\n          \n\n        </Select>\n     <FormHelperText style={{color:\"#4615b2\"}}>{props.helperText}</FormHelperText>\n      </FormControl>\n\n    {/* {\n     showTextBox ? <TextField helpertext={\"Enter the reason for the alarm manually\"} label={\"Enter Reason\"}></TextField> :  null\n    }  */}\n\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    backgroundColor: \"#00b0ff\",\n    fontSize: 14,\n\n    color: \"black\",\n    fontFamily: \"Acme\",\n    padding: 14,\n    textAlign: \"center\",\n    borderRadius: 6,\n    border: \"2px solid #18ffff\",\n  },\n\n  data: {\n    backgroundColor: \"#64dd17\",\n    fontSize: 12,\n    color: \"black\",\n    fontWeight: \"bold\",\n    padding: 14,\n    textAlign: \"center\",\n    borderRadius: 6,\n    border: \"2px solid #ffff00\",\n  },\n}));\n\nfunction HeaderBody() {\n  const classes = useStyles();\n\n  var machineId = localStorage.getItem(\"machineId\");\n\n  var shift = localStorage.getItem(\"shift\");\n\n  var fullName = localStorage.getItem(\"fullName\");\n\n  var componentName = localStorage.getItem(\"componentName\");\n\n  var modelNameCode = localStorage.getItem(\"modelName\");\n\n  var operationNameCode = localStorage.getItem(\"operationName\");\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>OPERATOR NAME</Container>\n            </Grid>\n            <Grid item sm={12} spacing={1}>\n              <Container className={classes.data}>{fullName}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>MACHINE ID</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{machineId}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>SHIFT</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{shift}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>COMPONENT</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{componentName}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>MODEL NAME</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>{modelNameCode}</Container>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={2}>\n          <Grid container>\n            <Grid item sm={12}>\n              <Container className={classes.container}>OPERATION</Container>\n            </Grid>\n            <Grid item sm={12}>\n              <Container className={classes.data}>\n                {operationNameCode}\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default HeaderBody;\n","import { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SuccessToast(msg){\n\n\n\n   return (toast.success(msg,{\n    position: \"bottom-right\",\n    autoClose: 7000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n\n    \n  }));\n\n  \n}","import React from \"react\";\nimport HeaderTitle from \"../reusableComponents/headerTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SecButton from '../reusableComponents/secButton';\nimport Button from '../reusableComponents/button';\nimport DropDown from \"../reusableComponents/select.js\";\nimport Box from \"@material-ui/core/Box\";\nimport HeaderBody from '../reusableComponents/headerBody.js';\nimport { Random } from 'react-animated-text';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport axios from 'axios';\nimport {useFormik} from 'formik';\nimport SuccesToast from '../reusableComponents/successToast';\nimport ErrorToast from '../reusableComponents/errorToast';\nimport * as yup from 'yup';\nimport {Redirect} from 'react-router-dom';\n\nfunction IdleScreen({history}) {\n\n  var machineId = localStorage.getItem(\"machineId\");\n\n  var shift = localStorage.getItem(\"shift\");\n \n  var fullName = localStorage.getItem(\"fullName\");\n\n  var componentName = localStorage.getItem(\"componentName\");\n\n  var modelName = localStorage.getItem(\"operationName\");\n\n  var operationName = localStorage.getItem(\"operationName\");\n\n  const schema = yup.object().shape({\n    idleReason: yup.string().required()\n    \n  });\n\n  const idleReasons=['lunch','went outside','some other work']\n\n const formik =  useFormik({\n initialValues:{\n idleReason :\"\"\n},\nvalidationSchema:schema,\n\n\n\n  \nonSubmit: (values,onSubmitProps) => {\n    let idleReason = values.idleReason;\n    \n    var result = {\n      'fullName': fullName,\n      'machineId': machineId,\n      'shift': shift,\n      'componentName': componentName,\n      'modelName': modelName,\n      'idleReason': idleReason,\n      'operationName': operationName,\n    };\n\n  axios(\n      {\n        url:'http://127.0.0.1:5002/idleTimeout',\n        method:'post',\n        headers:{'Content-Type': 'application/json'},\n        data:result\n      }\n    ).then((res)=>{\n    let response=res.data.result\n    if(response.status===1){\n      SuccesToast(response.message);\n      history.push('/dashbaord')\n\n\n    }\n    else{\n      ErrorToast(response.message)\n    }\n    }).catch((error) => {\n   console.log(error)\n    })\n\n\n    console.log(onSubmitProps) \n    onSubmitProps.setSubmitting(false);\n    onSubmitProps.resetForm() \n    \n  },\n})\n\nlet islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    console.log(\"setoperations page if condition\", localStorage.getItem('IS_LOGGED_IN'));\n    return <Redirect to='/login' />\n  }\n\n  else{\n\n\n  return (\n    <div>\n      <HeaderTitle text={\"IIOT CNC Monitoring \"}></HeaderTitle>\n      <Grid container>\n        <Grid item xs={12} sm={12}>\n          <Paper\n            elevation={20}\n            style={{\n              fontFamily: \"Acme\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#ffc107\",\n              color: \"#d50000\",\n              fontSize:26,\n              border:\"2px solid #ffd600\",\n              padding:4\n            }}\n          >\n            <Grid container>\n              <Grid\n                item\n                sm={7}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Random\n                 text=\"Machine is Idle for a long time\"\n                 effect=\"stretch\"\n                 effectChange={2.0}\n                 effectDuration={0.4}\n/>\n              </Grid>\n\n              <Grid\n                item\n                sm={4}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                }}\n              >\n                <Button\n                  color={\"#d50000\"}\n                  text={\"Machine Idle for long time\"}\n                  textColor={\"white\"}\n                ></Button>\n              </Grid>\n\n\n\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <p></p>\n      <HeaderBody></HeaderBody>\n     \n\n      <Box mt={15}></Box>\n  <form onSubmit={formik.handleSubmit}>\n      <Grid container >\n        <Grid\n          item\n          sm={12}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <DropDown\n            label={\"Select machine Idle Reason \"}\n            helperText={\"choose the reason why machine was idle for long time\"}\n            data={idleReasons}\n            name=\"idleReason\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.idleReason}\n          ></DropDown>\n        </Grid>\n        \n        <Grid item sm={12} style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginRight:30,\n                  marginTop:15\n                }}>\n\n          <SecButton type=\"submit\" isDisabled={!(formik.isValid&&formik.dirty)}  icon={<PublishIcon></PublishIcon>} text={\"Submit\"}></SecButton>\n\n        </Grid>\n\n      </Grid>\n      </form>\n    </div>\n  );\n}\n\n}\nexport default IdleScreen;\n","import React from \"react\";\nimport HeaderTitle from \"../reusableComponents/headerTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SecButton from '../reusableComponents/secButton';\nimport Button from '../reusableComponents/button';\nimport DropDown from \"../reusableComponents/select.js\";\nimport Box from \"@material-ui/core/Box\";\nimport HeaderBody from '../reusableComponents/headerBody.js';\nimport { Random } from 'react-animated-text';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport SuccesToast from \"../reusableComponents/successToast\";\nimport ErrorToast from \"../reusableComponents/errorToast\";\nimport {Redirect} from 'react-router-dom';\n\nfunction Alarm({history}) {\n\n  let machineId = localStorage.getItem(\"machineId\");\n\n      var shift = localStorage.getItem(\"shift\");\n\n      var fullName = localStorage.getItem(\"fullName\");\n\n      var componentName = localStorage.getItem(\"componentName\");\n\n      var modelName = localStorage.getItem(\"operationName\");\n\n      var operationName = localStorage.getItem(\"operationName\");\n\n      var jobId = localStorage.getItem(\"jobId\")\n\n\n\n  const schema = yup.object().shape({\n    alarmReason: yup.string().required()\n  });\n\n\n  const alarmReasons = ['Program Error Alarm','Safety Alarm','Machine Hardware fail Alarm','Preventive Maintenance Alarm','Tooling Alarm','Other']\n\n  const formik=useFormik({\n    initialValues:{\n      alarmReason:\"\",   \n    },\n    validationSchema:schema,\n    onSubmit: (values,onSubmitProps) => {\n      let alarmReason = values.alarmReason;\n      \n      var result = {\n        'jobId': jobId,\n        'operationName': operationName,\n        'machineId': machineId,\n        'shift': shift,\n        'fullName': fullName,\n        'componentName': componentName,\n        'modelName': modelName,\n        'alarmReason': alarmReason\n      };\n\n    axios(\n        {\n          url:'http://127.0.0.1:5002/alarmScreen',\n          method:'post',\n          headers:{'Content-Type': 'application/json'},\n          data:result\n        }\n      ).then((res)=>{\n      let response=res.data.result\n      if(response.status===1){\n        SuccesToast(response.message);\n        history.push('/dashbaord')\n\n\n      }\n      else{\n        ErrorToast(response.message)\n      }\n      }).catch((error) => {\n     console.log(error)\n      })\n\n\n      console.log(onSubmitProps) \n      onSubmitProps.setSubmitting(false);\n      onSubmitProps.resetForm() \n      \n    },\n  })\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n\n  else{\n\n  return (\n    console.log(formik),\n    <div>\n      <HeaderTitle text={\"IIOT CNC Monitoring \"}></HeaderTitle>\n      <Grid container>\n        <Grid item xs={12} sm={12}>\n          <Paper\n            elevation={20}\n            style={{\n              fontFamily: \"Acme\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#ffc107\",\n              color: \"#d50000\",\n              fontSize:26,\n              border:\"2px solid #ffd600\",\n              padding:4\n            }}\n          >\n            <Grid container>\n              <Grid\n                item\n                sm={7}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Random\n                 text=\"Alarm has been generated on the Machine!!\"\n                 effect=\"stretch\"\n                 effectChange={2.0}\n                 effectDuration={0.4}\n/>\n              </Grid>\n              <Grid\n                item\n                sm={3}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"end\",\n                }}\n              >\n                <Button\n                  color={\"#2196f3\"}\n                  text={`Job ID : ${jobId}`}\n                  textColor={\"white\"}\n                ></Button>\n              </Grid>\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                }}\n              >\n                <Button\n                  color={\"#d50000\"}\n                  text={\"Alarm On\"}\n                  textColor={\"white\"}\n                ></Button>\n              </Grid>\n\n\n\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <p></p>\n      <HeaderBody></HeaderBody>\n     \n\n      <Box mt={15}></Box>\n     <form onSubmit={formik.handleSubmit}>\n      <Grid container >\n        <Grid\n          item\n          sm={12}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <DropDown\n            label={\"Select Alarm Reason\"}\n            name=\"alarmReason\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.alarmReason}\n            helperText={\"Choose the reason why alarm has occured\"}\n            data={alarmReasons}\n          ></DropDown>\n        </Grid>\n        \n        <Grid item sm={12} style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginRight:30,\n                  marginTop:15\n                }}>\n\n          <SecButton isDisabled={!(formik.isValid&&formik.dirty)} type=\"submit\" icon={<PublishIcon></PublishIcon>} text={\"Submit\"}></SecButton>\n\n        </Grid>\n      </Grid>\n      </form>\n    </div>\n  );\n}\n}\n\nexport default Alarm;\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default function Inputchip(props) {\n    \n\n    return (\n        <>\n        <FormControl style={{width:'60%'}}  variant=\"outlined\">\n          <InputLabel  style={{fontWeight: 'bold'}}>JOB ID</InputLabel>\n          <OutlinedInput\n            value={props.value}\n            onChange={props.handleChange}\n            startAdornment={<InputAdornment position=\"start\"  style={{fontWeight: 'bold'}}>SIH</InputAdornment>}\n            labelWidth={60}\n            autoFocus={true}\n            notched={true}\n            onBlur={props.onBlur}\n            name={props.name}\n            error={props.touched && props.error ? true : false}\n\n          />\n          <FormHelperText\n          error={props.touched && props.error ? true : false}\n        >\n          {props.touched && props.error ? props.error : props.helpertext}\n        </FormHelperText>\n        </FormControl>\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import ChipInput from 'material-ui-chip-input'\n// import React from 'react';\n\n// function InputChip(props) {\n\n\n\n//  //const batchSize=localStorage.getItem(\"batchSize\");\n\n//  const yourChips=[];\n\n//  const  handleAddChip = (chip)=>{\n//     yourChips.push(chip)\n//  }\n\n//  const handleDeleteChip = (chip,index) =>{\n//      yourChips.pop(chip)\n//  }\n\n// //  const handleChange = (event)=>{\n// //      console.log(event);\n// //  }\n\n\n//  return (\n//  console.log(yourChips),\n// <div>\n\n// <ChipInput\n// //   error={true}\n//   allowDuplicates={false}\n//   label='Enter the Job Id of the component'\n//   style={{width:500}}\n//   variant='outlined'\n//   color='primary'\n//   onAdd={handleAddChip}\n//   onDelete={handleDeleteChip}\n//   name={props.name}\n//   value={props.value}\n// //   onChange={handleChange}\n//   ref={input => input && input.focus()}\n\n  \n// />\n//         </div>\n//     )\n// }\n\n// export default InputChip\n\n\n\n\n","import React, { useEffect, useState ,useRef} from \"react\";\nimport HeaderTitle from \"../reusableComponents/headerTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SecButton from \"../reusableComponents/secButton\";\nimport Button from \"../reusableComponents/button\";\nimport Box from \"@material-ui/core/Box\";\nimport HeaderBody from \"../reusableComponents/headerBody.js\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport EmojiEventsIcon from \"@material-ui/icons/EmojiEvents\";\nimport EmojiObjectsIcon from \"@material-ui/icons/EmojiObjects\";\nimport InputChip from \"../nonReusableComponents/inputChip\";\nimport Dialog from \"../reusableComponents/shutdownDialog\";\nimport { Redirect } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport SuccesToast from \"../reusableComponents/successToast\";\nimport ErrorToast from \"../reusableComponents/errorToast\";\nimport IdleTimer from 'react-idle-timer';\n\n\nfunction Dashboard({ history }) {\n\n\n  const idleTimerRef = useRef(null);\n\n  let idleTimeout= localStorage.getItem(\"idleTime\")\n\n  var timeout = Number(idleTimeout.split(\" \")[0])\n  \n\n\n  var machineId = localStorage.getItem(\"machineId\");\n\n  var shift = localStorage.getItem(\"shift\");\n\n  var fullName = localStorage.getItem(\"fullName\");\n\n  var componentName = localStorage.getItem(\"componentName\");\n\n  var modelName = localStorage.getItem(\"operationName\");\n\n  var operationName = localStorage.getItem(\"operationName\");\n\n  const [productionCount, setproductionCount] = useState(0);\n\n  const [liveSignal, setliveSignal] = useState(\"\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios\n        .post(\"http://127.0.0.1:5002/getCurrentSignal\", {\n          'userName': fullName\n        })\n        .then((response) => {\n          let result = response.data.result\n          if(result.status===1){\n            setliveSignal(result[\"liveSignal\"]);\n            setproductionCount(result[\"production\"])\n            if (result[\"liveSignal\"] === 'Alarm') {\n              history.push('/alarm')\n            }\n          } \n          \n        })\n        .catch((error) => {});\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const handleIdle = ()=>{\n    history.push('/screenIdle')\n  }\n\n  const logout = ()=>{\n     history.push('/login')\n  }\n\n  const schema = yup.object().shape({\n    jobId: yup.string().required(),\n  });\n\n  const releaseMachine = ()=>{\n    console.log(\"releaseing\")\n    axios.post('http://127.0.0.1:5002/HoldMachine',{'State':'Release'}).then(()=>{}).catch(()=>{});\n    SuccesToast('Machine Released, Please change the Tool')\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jobId: \"\",\n    },\n    validationSchema: schema,\n\n    onSubmit: (values, onSubmitProps) => {\n      let jobId = values.jobId;\n\n      localStorage.setItem(\"jobId\", jobId);\n\n      var result = {\n        'jobId': jobId,\n        'machineId': machineId,\n        'shift': shift,\n        'fullName':fullName,\n        'componentName': componentName,\n        'modelName': modelName,\n        'operationName': operationName\n      };\n\n      axios({\n        url: \"http://127.0.0.1:5002/operator\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: result,\n      })\n        .then((res) => {\n          let response = res.data.result;\n          if (response.status === 1) {\n            SuccesToast(response.message);\n            localStorage.setItem(\"shift\", response.data['shift']);\n          } else {\n            ErrorToast(response.message);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      console.log(onSubmitProps);\n      onSubmitProps.setSubmitting(false);\n      onSubmitProps.resetForm();\n    },\n  });\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n\n  else{\n  return (\n    <div>\n      <HeaderTitle text={\"IIOT CNC Monitoring \"}> </HeaderTitle>{\" \"}\n      <Grid container>\n        <Grid item xs={12} sm={12} spacing={1}>\n          <Paper\n            elevation={20}\n            style={{\n              fontFamily: \"Acme\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#ffc107\",\n              color: \"#d50000\",\n              fontSize: 26,\n              border: \"2px solid #ffd600\",\n              padding: 4,\n            }}\n          >\n            <Grid container>\n              <Grid\n                item\n                sm={1}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  paddingLeft: 20,\n                }}\n              >\n                <Button\n                  color={\"#ff3d00\"}\n                  text={\"Inspection\"}\n                  textColor={\"white\"}\n                  icon={<EmojiEventsIcon> </EmojiEventsIcon>}\n                >\n                  {\" \"}\n                </Button>{\" \"}\n              </Grid>{\" \"}\n              <Grid\n                item\n                sm={3}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  paddingLeft: 100,\n                }}\n              >\n                <Button\n                  color={\"#2196f3\"}\n                  text={`Production ${productionCount}`}\n                  textColor={\"white\"}\n                  icon={<EmojiEventsIcon> </EmojiEventsIcon>}\n                >\n                  {\" \"}\n                </Button>{\" \"}\n              </Grid>{\" \"}\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  paddingLeft: 30,\n                }}\n              >\n                {\" \"}\n                {liveSignal === \"Machine Idle\" ? (\n                  <Button\n                    color={\"#ff8f00\"}\n                    text={liveSignal ? liveSignal : \"laoding..\"}\n                    textColor={\"black\"}\n                    icon={<EmojiObjectsIcon> </EmojiObjectsIcon>}\n                  >\n                    {\" \"}\n                  </Button>\n                ) : liveSignal === \"Cycle\" ? (\n                  <Button\n                    color={\"#76ff03\"}\n                    text={liveSignal ? liveSignal : \"laoding..\"}\n                    textColor={\"black\"}\n                    icon={<EmojiObjectsIcon> </EmojiObjectsIcon>}\n                  >\n                  </Button>\n                ) : (\n                  <Button\n                    color={\"#d50000\"}\n                    text={liveSignal ? liveSignal : \"laoding..\"}\n                    textColor={\"white\"}\n                    icon={<EmojiObjectsIcon> </EmojiObjectsIcon>}\n                  >\n                    \n                  </Button>\n                )}\n              </Grid>\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  paddingLeft: 10,\n                }}\n              >\n                <Button\n                  color={\"#ff1744\"}\n                  text={\"Tool Change\"}\n                  textColor={\"white\"}\n                  handleClick={releaseMachine}\n                  icon={<BuildIcon> </BuildIcon>}\n                >\n                  {\" \"}\n                </Button>{\" \"}\n              </Grid>{\" \"}\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  paddingLeft: 30,\n                }}\n              >\n                <Dialog\n                  logout={logout}\n                  name=\"logout\"\n                  color={\"#00e676\"}\n                  bodyText={\"Do you really want to logout? \"}\n                  buttonText={\"Logout\"}\n                  icon={<ExitToAppIcon> </ExitToAppIcon>}\n                >\n                  {\" \"}\n                </Dialog>{\" \"}\n              </Grid>{\" \"}\n              <Grid\n                item\n                sm={2}\n                spacing={0}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                }}\n              >\n                <Dialog\n                  color={\"#d50000\"}\n                  bodyText={\"Do you really want to shutdown the device ? \"}\n                  buttonText={\"Shutdown\"}\n                  icon={<PowerSettingsNewIcon> </PowerSettingsNewIcon>}\n                >\n                  {\" \"}\n                </Dialog>{\" \"}\n              </Grid>{\" \"}\n            </Grid>{\" \"}\n          </Paper>{\" \"}\n        </Grid>{\" \"}\n      </Grid>{\" \"}\n      <p> </p> <HeaderBody> </HeaderBody> <Box mt={15}> </Box>{\" \"}\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container>\n          <Grid\n            item\n            sm={12}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <InputChip\n              name=\"jobId\"\n              value={formik.values.jobId}\n              handleChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              helpertext=\"Please specify the JOB ID of the component\"\n            ></InputChip>{\" \"}\n          </Grid>{\" \"}\n          <Grid\n            item\n            sm={12}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginRight: 30,\n              marginTop: 15,\n            }}\n          >\n            <SecButton\n              icon={<PublishIcon> </PublishIcon>}\n              text={\"Submit\"}\n              type=\"submit\"\n              isDisabled={!(formik.dirty&&formik.isValid&&liveSignal!==\"Cycle ON\")}\n            ></SecButton>\n          </Grid>{\" \"}\n        </Grid>{\" \"}\n      </form>{\" \"}\n\n      {\n        liveSignal==='Machine Idle' ? <IdleTimer ref={idleTimerRef} timeout={timeout*60*1000} onIdle={handleIdle}/> : null\n      }\n    </div>\n  );\n}\n\n}\n\nexport default Dashboard;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport {Redirect} from 'react-router-dom';\n\nfunction Home() {\n\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n\n  else{\n return (\n        <div>\n        \n        <Typography paragraph style={{ textAlign: \"center\"}}>\n         <div style={{marginTop: 100,marginLeft:80,color: \"black\",fontSize: 55,fontWeight: \"bold\",fontFamily: \"Dancing Script\" ,display: \"flex\",alignItems: \"center\",justifyContent: \"center\"}}>\n           <p>Welcome to the Configuration Dashboard of\n           </p> \n          </div>\n          <br></br>\n          <span style={{color: \"#fb8c00\",marginLeft:40,fontWeight:\"bolder\",fontSize: 30,fontFamily:\"Knewave\"}}>IIOT CNC Monitoring Device ... </span>\n          <br></br>\n          <p></p>\n          \n            <footer style={{marginTop:150,fontSize:20,fontWeight:'bold',fontFamily:\"Dancing Script\"}}> \n            <center>\n              <span style={{fontSize:15,fontWeight:'bold',fontFamily: \"Knewave\"}}> powered by </span><br></br>\n              Loginware Soft tech\n            </center>  \n            </footer>\n         \n        </Typography>\n        </div>\n    )\n}\n\n}\nexport default Home;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport '../index.css';\n\n\nfunction headerContainer(props) {\n\n    \n\n    return (\n        <div>\n            <Container style={{\n        marginTop:2,\n        marginLeft:200,\n        padding:10,\n        paddingLeft:80,\n        fontSize:30,\n        fontFamily: 'Acme',\n        color:'black',\n        background:\"#ffc400\",\n        borderRadius:10,\n\n            }} maxWidth=\"sm\"  variant=\"outlined\" >{props.text}</Container>\n        </div>\n    )\n}\n\nexport default headerContainer\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\n\nexport default function InputComponent(props) {\n  return (\n    <div>\n      <FormControl>\n        <InputLabel\n          htmlFor=\"my-input\"\n          style={{ color: \"#ff1744\", fontWeight: \"bold\" }}\n        >\n          {props.label}\n        </InputLabel>\n        <Input\n          error={props.touched && props.error ? true : false}\n          autoFocus={props.autofocus}\n          value={props.value}\n          name={props.name}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          style={{ width: 300, color: \"black\"}}\n        />\n        <FormHelperText\n          style={{ color: \"#4615b2\" }}\n          error={props.touched && props.error ? true : false}\n        >\n          {props.touched && props.error ? props.error : props.helpertext}\n        </FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport HomeMadeContainer from \"../../reusableComponents/headerContainer\";\nimport Button from \"../../reusableComponents/secButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport Box from \"@material-ui/core/Box\";\nimport InputComponent from \"../../reusableComponents/inputTextField\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport SuccessToast from \"../../reusableComponents/successToast\";\nimport ErrorToast from \"../../reusableComponents/errorToast\";\nimport Loader from \"../../reusableComponents/loader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Redirect} from 'react-router-dom';\n\nfunction NetworkConf() {\n  const [networkDetails, setnetworkDetails] = useState({\n    ip: \"\",\n    dns: \"\",\n    gateway: \"\",\n  });\n\n  const [isloading, setisloading] = useState(false);\n\n  const ipValidRegx = String.raw`^(([1-9]?\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(?!$)|(?=$))){4}$`;\n\n  const schema = yup.object().shape({\n    ip: yup.string().required().matches(ipValidRegx, \"invalid ip address\"),\n    dns: yup.string().required().matches(ipValidRegx, \"invalid dns provided\"),\n    gateway: yup\n      .string()\n      .required()\n      .matches(ipValidRegx, \"invalid gateway provided\"),\n  });\n\n  useEffect(() => {\n    setisloading(true);\n    axios\n      .get(\"http://127.0.0.1:5002/getNetworkConf\")\n      .then((res) => {\n        let result = res[\"data\"][\"result\"];\n        if (result[\"status\"] === 1) {\n          if (result[\"message\"] === \"successfully fetched saved data\") {\n            setnetworkDetails({\n              ip: result[\"data\"][\"ip\"],\n              dns: result[\"data\"][\"dns\"],\n              gateway: result[\"data\"][\"gateway\"],\n            });\n            setisloading(false);\n            SuccessToast(result[\"message\"]);\n          } else {\n            setisloading(false);\n            SuccessToast(result[\"message\"]);\n          }\n        } else {\n          setisloading(false);\n          ErrorToast(result[\"message\"]);\n        }\n      })\n      .catch((err) => {\n        setisloading(false);\n        console.log(\"error\", err);\n        ErrorToast(\"Error, failed to load previous data\");\n      });\n  }, []);\n\n  const formik = useFormik({\n    initialValues: networkDetails || {\n      ip: \"\",\n      dns: \"\",\n      gateway: \"\",\n    },\n    validationSchema: schema,\n    enableReinitialize: true,\n    onSubmit: (data) => {\n      setisloading(true);\n      axios\n        .post(\"http://127.0.0.1:5002/updateNetworkDetails\", data)\n        .then((res) => {\n          console.log(res);\n          let result = res[\"data\"][\"result\"];\n          console.log(result);\n          if (result[\"status\"] === 1) {\n            SuccessToast(result[\"message\"]);\n            setisloading(false);\n          } else {\n            ErrorToast(result[\"message\"]);\n            setisloading(false);\n          }\n        })\n        .catch((err) => {\n          console.log(\"error\");\n          setisloading(false);\n          ErrorToast(\"Something went wrong...\");\n        });\n      console.log(\"lets test\");\n    },\n  });\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n\n  else{\n\n\n  return (\n    <div style={{ marginTop: 100 }}>\n      <HomeMadeContainer text={\"Configure Network for the device\"} />\n      <br></br>\n      <br></br>\n      <center>\n        {isloading ? (\n          <Grid\n            container\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 100,\n              marginLeft: 50,\n            }}\n          >\n            <Grid item sm={12}>\n              <Loader color={\"#ff1744\"} size={60}></Loader>\n            </Grid>\n          </Grid>\n        ) : (\n          <form onSubmit={formik.handleSubmit}>\n            <Box ml={3}>\n              <InputComponent\n                name=\"ip\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.ip || networkDetails.ip}\n                helpertext={\"enter a unique ip address for the device\"}\n                label={\"IP Address\"}\n                error={formik.errors.ip}\n                touched={formik.touched.ip}\n              ></InputComponent>\n            </Box>\n            <Box ml={3}>\n              <InputComponent\n                helpertext={\n                  formik.touched.gateway && formik.errors.gateway\n                    ? formik.errors.gateway\n                    : \"enter the default gateway \"\n                }\n                label={\"Default gateway\"}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.gateway || networkDetails.gateway}\n                name=\"gateway\"\n                error={formik.errors.gateway}\n                touched={formik.touched.gateway}\n              ></InputComponent>\n            </Box>\n            <Box ml={3}>\n              <InputComponent\n                helpertext={\n                  formik.touched.dns && formik.errors.dns\n                    ? formik.errors.dns\n                    : \"enter a dns of the network\"\n                }\n                label={\"Domain Name Server\"}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.dns || networkDetails.dns}\n                name=\"dns\"\n                error={formik.errors.dns}\n                touched={formik.touched.dns}\n              ></InputComponent>\n            </Box>\n            <br></br>\n            <Button\n              type=\"submit\"\n              text={\"update\"}\n              isDisabled={!(formik.isValid && formik.dirty)}\n              icon={<UpdateIcon></UpdateIcon>}\n            />\n          </form>\n        )}\n      </center>\n    </div>\n  );\n}\n}\nexport default NetworkConf;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"../../reusableComponents/headerContainer\";\nimport Button from \"../../reusableComponents/secButton\";\nimport Box from \"@material-ui/core/Box\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport { useFormik } from \"formik\";\nimport Loader from \"../../reusableComponents/loader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport SuccessToast from \"../../reusableComponents/successToast\";\nimport ErrorToast from \"../../reusableComponents/errorToast\";\nimport * as yup from \"yup\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport {Redirect} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginTop: 100,\n  },\n  margin: {\n    margin: theme.spacing(1),\n    marginTop: 80,\n    marginLeft: 290,\n  },\n  input: {\n    width: 400,\n    background: \"#eeeeee\",\n    color: \"#212121\",\n    fontWeight: \"bold\",\n    fontSize: 15,\n  },\n\n  button: {\n    marginLeft: 360,\n    padding: 20,\n  },\n}));\n\nexport default function ServerConf() {\n  const classes = useStyles();\n\n  const [isloading, setisloading] = useState(false);\n  const [serverIp, setserverIp] = useState(null);\n  const schema = yup.object().shape({\n    api: yup.string().required(\"please enter Ip address of server\")\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      api: serverIp || \"\",\n    },\n    validationSchema: schema,\n\n    onSubmit: (values) => {\n      setisloading(true);\n      console.log(values);\n      const url = \"http://\" + values.api + \"/serverTest\";\n      axios\n        .get(url)\n        .then((res) => {\n          console.log(res);\n          //if success then save it in local db\n          axios\n            .post(\"http://127.0.0.1:5002/updateServerIP\", {\n              endpoint: values.api,\n            })\n            .then((res) => {\n              console.log(res);\n              let result = res[\"data\"][\"result\"];\n              if (result['status']===1){\n                setisloading(false);\n                SuccessToast(result['message']);\n              }\n              else{\n                setisloading(false);\n                ErrorToast(result['message']); \n              }\n              \n            })\n            .catch((err) => {\n              console.log(err);\n              setisloading(false);\n              ErrorToast(\"Error, something went wrong in saving the data\");\n            });\n        })\n        .catch((err) => {\n          console.log(\"error\");\n          setisloading(false);\n          ErrorToast(\"Error, failed to connect to your server\");\n        });\n    },\n\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    setisloading(true);\n    axios\n      .get(\"http://127.0.0.1:5002/getServerIP\")\n      .then((res) => {\n        let result = res[\"data\"][\"result\"];\n        if (result[\"status\"] === 1) {\n          if (result[\"message\"] === \"no previous data found\") {\n            setisloading(false);\n            SuccessToast(\"no previous data found\");\n          } \n          else {\n            setserverIp(result[\"data\"]);\n            setisloading(false);\n            SuccessToast(\"Successfully loaded previous data\");\n          }\n        }\n        else{\n          setisloading(false);\n          ErrorToast(\"something went wrong\");\n        }\n             \n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        setisloading(false);\n        ErrorToast(\"Error, failed to load previous data\");\n      });\n  }, []);\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n  else{\n  return (\n    (\n      <div className={classes.root}>\n        <br></br>\n        <Container text={\"Configire the device to your server\"}></Container>\n        <br></br>\n\n        {isloading ? (\n          <Grid\n            container\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 100,\n              marginLeft: 50,\n            }}\n          >\n            <Grid item sm={12}>\n              <Loader color={\"#ff1744\"} size={60}></Loader>\n            </Grid>\n          </Grid>\n        ) : (\n          <form onSubmit={formik.handleSubmit}>\n            <FormControl fullWidth className={classes.margin} variant=\"filled\">\n              <InputLabel htmlFor=\"endpoint\">Enter the server IP</InputLabel>\n              <FilledInput\n                id=\"endpoint\"\n                error={formik.touched && formik.errors.api ? true : false}\n                className={classes.input}\n                width={400}\n                onBlur={formik.handleBlur}\n                value={formik.values.api || serverIp}\n                startAdornment={\n                  <InputAdornment position=\"start\">http://</InputAdornment>\n                }\n                name=\"api\"\n                onChange={formik.handleChange}\n              />\n              <FormHelperText\n                error={formik.touched && formik.errors.api ? true : false}\n              >\n                {formik.touched && formik.errors.api ? formik.errors.api : \"\"}\n              </FormHelperText>\n            </FormControl>\n\n            <br></br>\n            <br></br>\n            <Box className={classes.button}>\n              <Button\n                text={\"Test Connection\"}\n                required={true}\n                type={\"submit\"}\n                icon={<RssFeedIcon></RssFeedIcon>}\n              ></Button>\n            </Box>\n          </form>\n        )}\n      </div>\n    )\n  );\n}\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst BootstrapInput = withStyles((theme) => ({\n  input: {\n    width: 220,\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#eeeeee\",\n    border: \"2px solid #e0e0e0\",\n    marginLeft: 30,\n    fontSize: 20,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nexport default function CustomizedSelects(props) {\n  return (\n    <div>\n      <FormControl>\n        <Select input={<BootstrapInput />} value={props.value} name={props.name} onChange={props.onChange}>\n          {\n            props.options ? props.options.map((ele,index)=><MenuItem value={ele} key={index}>{ele}</MenuItem>): <MenuItem >None</MenuItem>\n          }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport '../index.css'\n\nexport default function SwitchesGroup(props) {\n\n  return (\n    <FormControl component=\"fieldset\" style={{marginLeft:40}}>\n      <FormGroup>\n        <FormControlLabel\n          style={{fontFamily:\"Acme\"}}\n          control={<Switch value={props.value} onChange={props.onChange} name={props.name} />}\n          label=\"Enable\"\n        />\n\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport HomeMadeContainer from \"../../reusableComponents/headerContainer\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FilledSelect from \"../../reusableComponents/filledSelect\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"../../reusableComponents/switch\";\nimport Button from \"@material-ui/core/Button\";\nimport InputField from \"../../reusableComponents/roundTextfield\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport SuccessToast from \"../../reusableComponents/successToast\";\nimport ErrorToast from \"../../reusableComponents/errorToast\";\nimport {Redirect} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: 230,\n    height: 44,\n    padding: 12,\n    textAlign: \"center\",\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"bold\",\n    borderRadius: 5,\n    marginLeft: 200,\n  },\n}));\n\nfunction SignalConf() {\n  //  const schema = yup.object().shape({\n  //   signal1:yup.string().unique(),\n  //   signal2:yup.string().unique(),\n  //   pin1:yup.string().unique(),\n  //   pin2:yup.string().unique(),\n  //  })\n\n\n  const formik = useFormik({\n    initialValues: {\n      signal1: \"\",\n      signal2: \"\",\n      signal3: \"\",\n      signal4: \"\",\n      signal5: \"\",\n      signal6: \"\",\n      signal7: \"\",\n      signal8: \"\",\n      signal9: \"\",\n      signal10: \"\",\n      signal11: \"\",\n      signal12: \"\",\n      signal13: \"\",\n      signal14: \"\",\n\n      pin1: \"\",\n      pin2: \"\",\n      pin3: \"\",\n      pin4: \"\",\n      pin5: \"\",\n      pin6: \"\",\n      pin7: \"\",\n      pin8: \"\",\n      pin9: \"\",\n      pin10: \"\",\n      pin11: \"\",\n      pin12: \"\",\n      pin13: \"\",\n      pin14: \"\",\n\n      enable1: false,\n      enable2: false,\n      enable3: false,\n      enable4: false,\n      enable5: false,\n      enable6: false,\n      enable7: false,\n      enable8: false,\n      enable9: false,\n      enable10: false,\n      enable11: false,\n      enable12: false,\n      enable13: false,\n      enable14: false,\n    },\n\n    // validationSchema:schema,\n    onSubmit : (data)=>{\n      axios\n        .post(\"http://127.0.0.1:5002/updateSIgnalsDetails\", data)\n        .then((res) => {\n          console.log(res);\n          let result = res[\"data\"][\"result\"];\n          console.log(result);\n          if (result[\"status\"] === 1) {\n            SuccessToast(result[\"message\"]);\n          } else {\n            ErrorToast(result[\"message\"]);\n          }\n        })\n        .catch((err) => {\n          console.log(\"error\");\n          ErrorToast(\"Something went wrong...\");\n        });\n      console.log(\"lets test\");\n    },\n      \n  });\n\n  const classes = useStyles();\n  const pins = [\n    \"INPUT1\",\n    \"INPUT2\",\n    \"INPUT3\",\n    \"INPUT4\",\n    \"INPUT5\",\n    \"INPUT6\",\n    \"INPUT7\",\n    \"INPUT8\",\n    \"INPUT9\",\n    \"INPUT10\",\n    \"INPUT11\",\n    \"INPUT12\",\n    \"INPUT13\",\n    \"INPUT14\",\n  ];\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n  else{\n\n  return (\n    <div style={{ marginTop: 100 }}>\n      <HomeMadeContainer text={\"Configure Signals for the device\"} />\n      <br></br>\n      <br></br>\n      \n\n      <Grid container spacing={10}>\n        <Grid item xs={4}>\n          <Container\n            maxWidth=\"sm\"\n            style={{\n              backgroundColor: \"#0091ea\",\n              fontSize: 18,\n              fontWeight: \"bolder\",\n              color: \"white\",\n              borderRadius: 16,\n              marginLeft: 45,\n              fontFamily: \"Acme\",\n              textAlign: \"center\",\n              padding: 10,\n            }}\n          >\n            Signal Name\n          </Container>{\" \"}\n        </Grid>\n        <Grid item xs={4}>\n          <Container\n            maxWidth=\"sm\"\n            style={{\n              backgroundColor: \"#0091ea\",\n              fontSize: 18,\n              fontWeight: \"bolder\",\n              color: \"white\",\n              borderRadius: 16,\n              marginLeft: 45,\n              fontFamily: \"Acme\",\n              textAlign: \"center\",\n              padding: 10,\n            }}\n          >\n            Pin number\n          </Container>{\" \"}\n        </Grid>\n        <Grid item xs={4}>\n          <Container\n            maxWidth=\"sm\"\n            style={{\n              backgroundColor: \"#0091ea\",\n              fontSize: 18,\n              fontWeight: \"bolder\",\n              color: \"white\",\n              borderRadius: 16,\n              marginLeft: 45,\n              fontFamily: \"Acme\",\n              textAlign: \"center\",\n              padding: 10,\n            }}\n          >\n            Enable / disable\n          </Container>{\" \"}\n        </Grid>\n      </Grid>\n\n      <center>\n        <div>\n          <h5 style={{ color: \"red\" }}>\n            *please specify the signal names without spaces and in small letters\n          </h5>\n        </div>\n      </center>\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={10}>\n          <Grid item xs={4}>\n            <Box mt={1}></Box>\n            <InputField\n              width={220}\n              bgColor=\"#ff3d00\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal1}\n              name=\"signal1\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#52b202\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal2}\n              name=\"signal2\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#2196f3\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal3}\n              name=\"signal3\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              marginLeft={60}\n              bgColor=\"#ffd600\"\n              color=\"white\"\n              size=\"small\"\n              onChange={formik.handleChange}\n              value={formik.values.signal4}\n              name=\"signal4\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#d50000\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal5}\n              name=\"signal5\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#00e676\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal6}\n              name=\"signal6\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#e91e63\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal7}\n              name=\"signal7\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#76ff03\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal8}\n              name=\"signal8\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              marginLeft={60}\n              size=\"small\"\n              onChange={formik.handleChange}\n              value={formik.values.signal9}\n              name=\"signal9\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal10}\n              name=\"signal10\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal11}\n              name=\"signal11\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal12}\n              name=\"signal12\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal13}\n              name=\"signal13\"\n            ></InputField>\n            <br></br>\n            <InputField\n              width={220}\n              bgColor=\"#bdbdbd\"\n              color=\"white\"\n              size=\"small\"\n              marginLeft={60}\n              onChange={formik.handleChange}\n              value={formik.values.signal14}\n              name=\"signal14\"\n            ></InputField>\n            <br></br>\n          </Grid>\n\n          <Grid item xs={4} style={{ marginTop: 7 }}>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin1}\n              name=\"pin1\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin2}\n              name=\"pin2\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin3}\n              name=\"pin3\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin4}\n              name=\"pin4\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin5}\n              name=\"pin5\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin6}\n              name=\"pin6\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin7}\n              name=\"pin7\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin8}\n              name=\"pin8\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin9}\n              name=\"pin9\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin10}\n              name=\"pin10\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin11}\n              name=\"pin11\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin12}\n              name=\"pin12\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin13}\n              name=\"pin13\"\n            ></FilledSelect>\n            <br></br>\n            <FilledSelect\n              options={pins}\n              onChange={formik.handleChange}\n              value={formik.values.pin14}\n              name=\"pin14\"\n            ></FilledSelect>\n            <br></br>\n          </Grid>\n\n          <Grid item xs={4} spacing={5}>\n            <Box mt={2} ml={6}>\n              <Switch\n                onChange={formik.handleChange}\n                value={formik.values.enable1}\n                name=\"enable1\"\n              ></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch\n                onChange={formik.handleChange}\n                value={formik.values.enable2}\n                name=\"enable2\"\n              ></Switch>\n            </Box>\n            <Box mt={3} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable3}\n                name=\"enable3\"></Switch>\n            </Box>\n            <Box mt={3} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable4}\n                name=\"enable4\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable5}\n                name=\"enable5\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable6}\n                name=\"enable6\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable7}\n                name=\"enable7\"></Switch>\n            </Box>\n            <Box mt={3} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable8}\n                name=\"enable8\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable9}\n                name=\"enable9\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable10}\n                name=\"enable10\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable11}\n                name=\"enable11\"></Switch>\n            </Box>\n            <Box mt={3} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable12}\n                name=\"enable12\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable13}\n                name=\"enable13\"></Switch>\n            </Box>\n            <Box mt={4} ml={6}>\n              <Switch onChange={formik.handleChange}\n                value={formik.values.enable14}\n                name=\"enable14\"></Switch>\n            </Box>\n          </Grid>\n        </Grid>\n\n        <Box ml={55} m={2}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            className={classes.margin}\n            type=\"submit\"\n            style={{ backgroundColor: \"#512da8\", color: \"white\" }}\n            \n          >\n            Submit\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n}\n\n}\nexport default SignalConf;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nexport default function RadioButtonsGroup(props) {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel\n        component=\"legend\"\n        style={{ color: \"#ff1744\", fontWeight: \"bold\" }}\n      >\n        {props.label}\n      </FormLabel>\n      <RadioGroup\n        name={props.name}\n        value={props.value}\n        required\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n        \n      >\n        <FormControlLabel\n          value={props.option1}\n          control={<Radio />}\n          key={1}\n          label={props.option1}\n        />\n        <FormControlLabel\n          value={props.option2}\n          control={<Radio />}\n          key={2}\n          label={props.option2}\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport HomeMadeContainer from \"../../reusableComponents/headerContainer\";\nimport Select from \"../../reusableComponents/select\";\nimport InputTextField from \"../../reusableComponents/inputTextField\";\nimport Radio from \"../../reusableComponents/radioInput\";\nimport Button from \"../../reusableComponents/secButton\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport SuccessToast from \"../../reusableComponents/successToast\";\nimport ErrorToast from \"../../reusableComponents/errorToast\";\nimport Loader from \"../../reusableComponents/loader\";\nimport * as yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Redirect} from 'react-router-dom';\n\nfunction OtherSetting() {\n  const [isloading, setisloading] = useState(false);\n  const [otherSettingsSavedData, setotherSettingsSavedData] = useState({});\n  const [machineIds, setmachineIds] = useState([]);\n  const machineIdleTimes = [\"2 mins\", \"3 mins\", \"5 mins\", \"10 mins\", \"15 mins\"];\n  const dataCleaningIntervals = [\n    \"7 days\",\n    \"2 weeks\",\n    \"3 weeks\",\n    \"1 month\",\n    \"6 months\",\n    \"1 year\",\n  ];\n  const machineTypes = [\"Automatic\", \"Semi Automatic\", \"Manual\"];\n\n  const schema = yup.object().shape({\n    machineId: yup.string().required(),\n    batchSize: yup.number().required(),\n    holdingRelay: yup.string().required(),\n    machineBypass: yup.string().required(),\n    cleaningInterval: yup.string().required(),\n    machineType: yup.string().required(),\n    idleTimeout: yup.string().required(),\n  });\n\n\n  useEffect(() => {\n    setisloading(true);\n    axios.get(\"http://127.0.0.1:5002/getOtherSettings\")\n      .then((res) => {\n        let result = res['data']['result'];\n        if(result['status']===1){\n          if(result['message']===\"successfully fetched saved data\")\n          {\n            setotherSettingsSavedData({\n                machineId: result['data']['machineId'],\n                batchSize: result['data']['batchSize'],\n                holdingRelay: result['data']['holdingRelay'],\n                machineBypass: result['data']['machineBypass'],\n                cleaningInterval: result['data']['cleaningInterval'],\n                machineType:result['data']['machineType'],\n                idleTimeout: result['data']['idleTimeout'],\n            })\n            setisloading(false);\n            SuccessToast(result['message'])\n          }\n          else{\n            setisloading(false);\n            SuccessToast(result['message'])\n          }\n         \n        }\n        else{\n          setisloading(false)\n          ErrorToast(result['message']);\n        }\n      })\n      .catch((err) => {\n        setisloading(false)\n        console.log(\"error\",err);\n        ErrorToast(\"Error, failed to load previous data\");\n      });\n  },[]);\n\n  const formik = useFormik({\n    initialValues: otherSettingsSavedData || {\n      machineId: \"\",\n      batchSize: null,\n      holdingRelay: null,\n      machineBypass: \"\",\n      cleaningInterval: \"\",\n      machineType: \"\",\n      idleTimeout: \"\",\n    },\n    enableReinitialize:true,\n    validationSchema: schema,\n    onSubmit: (data) => {\n      setisloading(true);\n      console.log(data);\n      axios({\n        url: \"http://127.0.0.1:5002/updateOtherSettings\",\n        method: \"post\",\n        data: data,\n      })\n        .then((res) => {\n          let result = res[\"data\"][\"result\"];\n          console.log(result);\n          if (result[\"status\"] === 1) {\n            SuccessToast(result[\"message\"]);\n          } else {\n            ErrorToast(result[\"message\"]);\n          }\n          setisloading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setisloading(false);\n        });\n    },\n  });\n\n\n  useEffect(() => {\n    axios({\n      url: \"http://10.130.10.111/BE/api/iiot/GetMachineIdsList\",\n      method: \"get\",\n      timeout: 3000,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        let result=res[\"data\"];\n        let machineList=[]\n        for(let i=0; i<result.length; i++)\n        {\n          machineList.push(result[i]['Code'])\n        }\n        setmachineIds(machineList);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n  else{\n\n  return (\n    console.log(formik),\n    <div style={{ marginTop: 100 }}>\n      <form onSubmit={formik.handleSubmit}>\n        <HomeMadeContainer\n          text={\"Configure Other Settings for the device\"}\n        ></HomeMadeContainer>\n\n        {isloading ? (\n          <Grid\n            container\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 100,\n              marginLeft: 50,\n            }}\n          >\n            <Grid item sm={12}>\n              <Loader color={\"#ff1744\"} size={60}></Loader>\n            </Grid>\n          </Grid>\n        ) : (\n          <div style={{ marginLeft: 220, marginTop: 10 }}>\n            <br></br>\n                <Select\n                  label={\"Select Machine id\"}\n                  helperText={\n                    \"Server ip must be set before selecting machine id\"\n                  }\n                  data={machineIds}\n                  name=\"machineId\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.errors.machineId}\n                  value={formik.values.machineId || otherSettingsSavedData.machineId }\n                  touched={formik.touched.machineId}\n                ></Select>\n            <InputTextField\n              label={\"Batch Size \"}\n              helpertext={\"enter the components batch size\"}\n              name=\"batchSize\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.batchSize}\n              touched={formik.touched.batchSize}\n              error={formik.errors.batchSize}\n            ></InputTextField>\n            <br></br>\n            <Radio\n              label={\"Select Holding Relay\"}\n              option1={\"OUTPUT1\"}\n              option2={\"OUTPUT2\"}\n              name=\"holdingRelay\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.holdingRelay || otherSettingsSavedData.holdingRelay}\n              touched={formik.touched.holdingRelay}\n              error={formik.errors.holdingRelay}\n            ></Radio>\n            <br></br>\n            <Radio\n              label={\"Machine Bypass(Emergency case)\"}\n              option1={\"Hold Machine\"}\n              option2={\"ByPass Machine\"}\n              name=\"machineBypass\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.machineBypass || otherSettingsSavedData.machineBypass}\n              touched={formik.touched.machineBypass}\n              error={formik.errors.machineBypass}\n            ></Radio>\n            <br></br>\n            <Select\n              label={\"Select Machine Idle time\"}\n              helperText={\"select how much time machine can be idle\"}\n              data={machineIdleTimes}\n              name=\"idleTimeout\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.idleTimeout || otherSettingsSavedData.idleTimeout}\n              touched={formik.touched.idleTimeout}\n              error={formik.errors.idleTimeout}\n            ></Select>\n            <Select\n              label={\"Select Data Cleaning Interval\"}\n              helperText={\"select how much time machine can be idle\"}\n              data={dataCleaningIntervals}\n              name=\"cleaningInterval\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cleaningInterval || otherSettingsSavedData.cleaningInterval}\n              touched={formik.touched.cleaningInterval}\n              error={formik.errors.cleaningInterval}\n            ></Select>\n            <Select\n              label={\"Select Machine Type\"}\n              helperText={\"select the type of the machine\"}\n              data={machineTypes}\n              name=\"machineType\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.machineType || otherSettingsSavedData.machineType}\n              touched={formik.touched.machineType}\n              error={formik.errors.machineType}\n            ></Select>\n            <Button\n              icon={<PublishIcon></PublishIcon>}\n              isDisabled={!(formik.isValid && formik.dirty)}\n              type=\"submit\"\n              text={\"Save\"}\n            ></Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n}\nexport default OtherSetting;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport NetworkCheckIcon from \"@material-ui/icons/NetworkCheck\";\nimport FiberPinIcon from \"@material-ui/icons/FiberPin\";\nimport Home from \"../pages/admin/home\";\nimport NetworkConf from \"../pages/admin/networkConf\";\nimport ServerConf from \"../pages/admin/serverConf\";\nimport SignalConf from \"../pages/admin/signalConf\";\nimport OtherSettings from \"../pages/admin/otherSetting\";\nimport { Router, Route, Link } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Dialog from '../reusableComponents/shutdownDialog';\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport Box from \"@material-ui/core/Box\";\nimport {Redirect} from 'react-router-dom';\n\nconst drawerWidth = 220;\nconst history = createBrowserHistory();\nconst icons = [\n  <HomeIcon> </HomeIcon>,\n  <NetworkCheckIcon></NetworkCheckIcon>,\n  <FiberPinIcon> </FiberPinIcon>,\n  <DnsIcon></DnsIcon>,\n  <SettingsIcon> </SettingsIcon>,\n];\nconst routes = [\n  \"/admin\",\n  \"/admin/serverConf\",\n  \"/admin/signalsConf\",\n  \"/admin/networkConf\",\n  \"/admin/otherSettings\",\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n  flex: {\n    flex: 1,\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    background: \"#5e35b1\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    position: \"relative\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#eeeeee\",\n    color: \"black\",\n    fontWeight: \"bolder\",\n    fontFamily: \"Merriweather\",\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  aboveDrawer: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  let islogged = localStorage.getItem('IS_LOGGED_IN');\n  if (islogged === 'false') {\n    return <Redirect to='/login' />\n  }\n  else{\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Admin Dashboard\n          </Typography>\n          <Box ml={60}>\n            \n            <Dialog\n              color={\"#d50000\"}\n              bodyText={\"Do you really want to shutdown the device ? \"}\n              buttonText={\"Shutdown\"}\n              name={\"shutdown\"}\n              icon={<PowerSettingsNewIcon> </PowerSettingsNewIcon>}\n              \n            >\n             \n            </Dialog>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Router history={history}>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.toolbar} /> <Divider />\n          <List>\n            {\" \"}\n            {[\n              \"Home\",\n              \"Server Settings\",\n              \"Signals Configuration\",\n              \"Network Settings\",\n              \"Other Settings\",\n            ].map((text, index) => (\n              <>\n                <ListItem\n                  button\n                  key={index}\n                  style={{\n                    color: \"black\",\n                  }}\n                  component={Link}\n                  to={routes[index]}\n                >\n                  <ListItemIcon\n                    style={{\n                      color: \"#f50057\",\n                    }}\n                  >\n                    {\" \"}\n                    {icons[index]}{\" \"}\n                  </ListItemIcon>{\" \"}\n                  <ListItemText primary={text} />\n                </ListItem>{\" \"}\n                <Divider />\n              </>\n            ))}{\" \"}\n          </List>\n        </Drawer>{\" \"}\n        <main className={classes.content}>\n          <Route exact path=\"/admin\" component={Home} />{\" \"}\n          <Route exact path=\"/admin/otherSettings\" component={OtherSettings} />{\" \"}\n          <Route exact path=\"/admin/networkConf\" component={NetworkConf} />{\" \"}\n          <Route exact path=\"/admin/serverConf\" component={ServerConf} />{\" \"}\n          <Route exact path=\"/admin/signalsConf\" component={SignalConf} />\n        </main>{\" \"}\n      </Router>{\" \"}\n    </div>\n  );\n}\n}","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport LoadingScreen from \"./pages/welcome.js\";\nimport LoginScreen from \"./pages/login\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SetOperations from \"./pages/setOperations\";\nimport ScreenIdle from \"./pages/screenIdle\";\nimport AlarmScreen from \"./pages/alarm\";\nimport Dashboard from \"./pages/dashboard\";\nimport AdminDashboard from \"./nonReusableComponents/drawer\";\n\n\nfunction App() {\n\n\n  const getinitialValues = data => {\n    localStorage.setItem(\"machineId\", data['machineId']);\n    localStorage.setItem(\"batchSize\",data['batchSize'])\n    localStorage.setItem(\"idleTime\",data['idleTimeout'])\n  }\n\n\n\n\n  return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" render={({ history }) => (\n              <LoadingScreen history={history} valueSetter={getinitialValues} />\n            )}></Route>\n            <Route exact path=\"/login\" render={({ history }) => (\n              <LoginScreen history={history} />\n            )}></Route>\n            <Route exact path=\"/setoperations\" render={({ history }) => (\n              <SetOperations history={history}  />\n            )}></Route>\n            <Route exact path=\"/alarm\" render={({ history }) => (\n              <AlarmScreen history={history}  />\n            )}></Route>\n            <Route exact path=\"/dashbaord\" render={({ history }) => (\n              <Dashboard history={history}  />\n            )}></Route>\n            <Route exact path=\"/screenIdle\" render={({ history }) => (\n              <ScreenIdle history={history}  />\n            )}></Route>\n            <Route exact path=\"/admin\" render={({ history }) => (\n              <AdminDashboard history={history}  />\n            )}></Route>\n\n          </Switch>\n        </Router>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}